
<#@ Template Language="C#" HostSpecific="True"  #>
<#@ Output Extension="cs" #>
<#@ ScaffoldingAssembly Processor="ScaffoldingAssemblyLoader" #>
<#@ assembly name="System.ComponentModel.DataAnnotations" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data.Entity" #>
<#@ assembly name="System.Data.Linq" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="System.Data.Linq.Mapping" #>
<#@ import namespace="System.Data.Objects.DataClasses" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Microsoft.AspNet.Scaffolding.Core.Metadata" #><#@ parameter type="System.String" name="DefaultNamespace" #>
<#@ parameter type="System.String" name="ModelNamespace" #>
<#@ parameter type="System.String" name="FolderNamespace" #>
<#@ parameter type="System.String" name="ModelName" #>
<#@ parameter type="System.String" name="PluralizedModelName" #>
<#@ parameter type="Microsoft.AspNet.Scaffolding.Core.Metadata.ModelMetadata" name="ModelMetadata" #>
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Linq.Expressions;
using  Microsoft.AspNet.FriendlyUrls.ModelBinding;

using <#= ModelNamespace #>;

namespace <#=DefaultNamespace #>.Repositories
{
    interface I<#= ModelName #>Repository
    {

			IQueryable<<#= ModelName #>> Get(string sortByExpression, int maximumRows,
						int startRowIndex, out int totalRowCount,[System.Web.ModelBinding.Control("searchTextBox")]string searchText);
			<#= ModelName #> GetById([FriendlyUrlSegmentsAttribute(0)]int? Id );

            <# 
    foreach (PropertyMetadata property in ModelMetadata.Properties) { 
        if (property.IsForeignKey) {

            #>
             IQueryable<<#= ModelName #>> GetBy<#= property.PropertyName.Replace("_","") #>(int id);

            
                
<#
        }
    }
#>

	}
}