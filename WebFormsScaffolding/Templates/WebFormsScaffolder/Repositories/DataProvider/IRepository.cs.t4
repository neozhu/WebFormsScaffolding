
<#@ Template Language="C#" HostSpecific="True"  #>
<#@ Output Extension="cs" #>
<#@ parameter type="System.String" name="DefaultNamespace" #>


using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Linq.Expressions;
using System.Web.UI.WebControls;

namespace <#= DefaultNamespace #>.Repositories.DataProvider
{
   public interface IRepository<TEntity> where TEntity : class
    {
   
		int CreateItem(TEntity entity, ModelMethodContext modelMethodContext);
        int UpdateItem(object id, ModelMethodContext modelMethodContext);
        int DeleteItem(object id, ModelMethodContext modelMethodContext);
        int DeleteWhere(Expression<Func<TEntity, bool>> criteria);
        TEntity Create(TEntity entity);
        TEntity Update(TEntity entity);
        void Delete(object id);
        void Delete(TEntity entity);

        TEntity Read(object Id);
        IEnumerable<TEntity> ReadAll();
        IEnumerable<TEntity> ReadMany(Expression<Func<TEntity, bool>> criteria);
        IEnumerable<TEntity> ReadMany(ISpecification<TEntity> spec);
        TEntity ReadOne(Expression<Func<TEntity, bool>> criteria);
        TEntity ReadOne(ISpecification<TEntity> spec);
        void SaveChanges();
    }
}