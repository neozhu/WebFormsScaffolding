<#@ Template Language="C#" HostSpecific="True"  #>
<#@ Output Extension="cs" #>
<#@ include file="Imports.include.t4" #>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.ModelBinding;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data.Entity;
using Microsoft.AspNet.FriendlyUrls.ModelBinding;
using System.Web.DynamicData;
using <#=DefaultNamespace #>.Repositories.<#= PluralizedModelName #>;
using <#=DefaultNamespace #>.Extensions;
<# if(!string.IsNullOrEmpty(ModelNamespace)) { #>
using <#= ModelNamespace #>;
<# } #>
<# if(!string.IsNullOrEmpty(DbContextNamespace) && (DbContextNamespace != ModelNamespace)) { #>
using <#= DbContextNamespace #>;
<# } #>

namespace <#= FolderNamespace #>
{
    public partial class Details : System.Web.UI.Page
    {
		protected <#=DbContextTypeName #> _db = new <#=DbContextTypeName#>();
        protected readonly <#= ModelName #>Repository _repository =
            new <#= ModelName #>Repository(new <#=DbContextTypeName #>());

        protected void Page_Init()
        {
            //TODO:添加页面标题
            this.Title = "<#= ModelName #>";
            <#= ModelName #>FormView.SetDataMethodsObject(_repository);
            <#= ModelName #>FormView.RedirectToRouteOnItemInserted("../Default");
            <#= ModelName #>FormView.RedirectToRouteOnItemUpdated("../Default");
            <#= ModelName #>FormView.RedirectToRouteOnItemDeleted("../Default");
            <#= ModelName #>FormView.RedirectToRouteOnItemCommad("../Default");
        }
        protected void Page_Load(object sender, EventArgs e)
        {
        }

        //TODO:完成编辑GridView选中的记录
        protected void editbtn_Click(object sender, EventArgs e)
        {

        }
        //TODO:完成删除GridView选中的记录
        protected void deletebtn_Click(object sender, EventArgs e)
        {
          
        }
        //TODO:完成通过搜索关键字查询
        protected void searchbtn_Click(object sender, EventArgs e)
        {
            
        }

        <#
    foreach (KeyValuePair<string,string > keyval in OneToManyNames) {     
        #>
        //TODO:根据外键获取<#= keyval.Key #>明细表数据
        public IQueryable<<#= keyval.Value #>> Get<#= keyval.Key #>By<#= ModelName #>Id(string sortByExpression, int maximumRows, int startRowIndex, out int totalRowCount, [FriendlyUrlSegmentsAttribute(0)]int? Id)
        {
                throw new NotImplementedException();
        }
        <#
        }
        #>
        //TODO:当绑定数据时，载入MetaTable
        protected void <#=        ModelName #>FormView_DataBound(object sender, EventArgs e)
        {
            <#
            foreach (PropertyMetadata property in ModelMetadata.Properties) 
            {
                if ( property.AssociationDirection == AssociationDirection.OneToMany && OneToManyModels.ContainsKey(property.PropertyName))
                {
            #>
            var sub<#=        property.ShortTypeName #>GridView = (GridView)this.<#=        ModelName #>FormView.FindControl("sub<#=        property.ShortTypeName #>GridView");
            if (sub<#=        property.ShortTypeName #>GridView != null)
            {
                MetaTable metaTable = MetaTable.GetTable(typeof(<#=        property.TypeName #>));
                sub<#=        property.ShortTypeName #>GridView.SetMetaTable(metaTable);
                sub<#=        property.ShortTypeName #>GridView.DataBind();
            }

            <#
                }
            }
            #>
            
        }
    }
}

<#@ include file="ModelMetadataFunctions.cs.include.t4" #>
